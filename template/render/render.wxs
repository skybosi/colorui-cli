/**
 * 处理数据使其返回数组
 */
var toArray = function(array) {
  // console.log(array)
  if (!array) {
    return ['请输入关键字...']
  } else if (array.constructor === 'Array') {
    return array
  } else if (array) {
    return [array]
  } else {
    return ['请输入关键字...']
  }
}

var COLOR = [
  "red", "orange", "yellow", "olive", "green", "cyan",
  "blue", "purple", "mauve", "pink", "brown", "grey",
  "black", "darkGray", "gray",
  // "ghostWhite", "white",
  /* 浅色 */
  // "redLight", "orangeLight", "yellowLight", "oliveLight",
  // "greenLight", "cyanLight", "blueLight", "purpleLight",
  // "mauveLight", "pinkLight", "brownLight", "greyLight",
  /* 渐变色 */
  // "gradualRed", "gradualOrange", "gradualGreen", "gradualPurple",
  // "gradualPink", "gradualBlue",
  /* 阴影透明色 */
  // "ShadowSize", "redShadow", "orangeShadow", "yellowShadow",
  // "oliveShadow", "greenShadow", "cyanShadow", "blueShadow",
  // "purpleShadow", "mauveShadow", "pinkShadow", "brownShadow",
  // "greyShadow", "grayShadow", "blackShadow",
]

var color = function() {
  var index = Math.floor(Math.random() * COLOR.length)
  return COLOR[index];
}

/**
 * json格式化输出
 */
var Json = function(json, options) {
  var reg = null,
    formatted = '',
    pad = 0,
    PADDING = '\t';
  options = options || {};
  options.newlineAfterColonIfBeforeBraceOrBracket = (options.newlineAfterColonIfBeforeBraceOrBracket === true) ? true : false;
  options.spaceAfterColon = (options.spaceAfterColon === false) ? false : true;
  if (typeof json !== 'string') {
    json = JSON.stringify(json);
  } else {
    json = JSON.parse(json);
    json = JSON.stringify(json);
  }
  reg = getRegExp('([\{\}])', "img")
  json = json.replace(reg, '\r\n$1\r\n');
  reg = getRegExp('([\[\]])', "img")
  json = json.replace(reg, '\r\n$1\r\n');
  reg = getRegExp('(\,)', "img")
  json = json.replace(reg, '$1\r\n');
  reg = getRegExp('(\r\n\r\n)', "img")
  json = json.replace(reg, '\r\n');
  reg = getRegExp('\r\n\,', "img")
  json = json.replace(reg, ',');
  if (!options.newlineAfterColonIfBeforeBraceOrBracket) {
    reg = getRegExp('\:\r\n\{', "img")
    json = json.replace(reg, ' : {');
    reg = getRegExp('\:\r\n\[', "img")
    json = json.replace(reg, ' : [');
  }
  if (options.spaceAfterColon) {
    reg = getRegExp('\:', "img")
    json = json.replace(reg, ' : ');
  }
  (json.split('\r\n')).forEach(function(node, index) {
    var i = 0,
      indent = 0,
      padding = '';
    if (node.match('\{$') || node.match('\[$')) {
      indent = 1;
    } else if (node.match('\}') || node.match('\]')) {
      if (pad !== 0) {
        pad -= 1;
      }
    } else {
      indent = 0;
    }
    for (i = 0; i < pad; i++) {
      padding += PADDING;
    }
    if (node != "") {
      formatted += padding + node + '\r\n';
    }
    pad += indent;
  });
  return formatted;
}

/**
 * 切换轮播自动播放
 */
var switchAutoplay = function(event, ins) {
  console.log('switchAutoplay:', JSON.stringify(ins.selectComponent('.swiper')))
  ins.callMethod('updateAutoplay', event)
}

/**
 * 长按item 处理函数
 */
var longclickItem = function(event, ins) {
  console.log('longclickItem:', JSON.stringify(ins.selectComponent('.modal-display')))
  ins.selectComponent('.modal-display').addClass('show')
}

/**
 * 长按item 处理函数
 */
var longclickItemHandle = function(event, ins) {
  console.log('longclickItemHandle:', JSON.stringify(ins.selectComponent('.modal-display')))
  ins.selectComponent('.modal-display').removeClass('show')
  console.log(JSON.stringify(event))
}

/**
 * 是否显示授权弹框
 */
var authDisplay = function(event, ins) {
  console.log('authDisplay:', JSON.stringify(event))
  ins.selectComponent('.auth-display').removeClass('show')
}

/**
 * 是否显示搜索过滤条件
 */
var switchSearchBar = function(event, ins) {
  console.log('switchSearchBar:', JSON.stringify(event))
  var chose = event.currentTarget.dataset.target
  if ('show' === chose) {
    ins.selectComponent('.search-bar-filter').addClass('show')
  } else {
    ins.selectComponent('.search-bar-filter').removeClass('show')
  }
  return false
}

/**
 * 控制card 轮播的样式变化，perfect
 */
var cardSwiper = function(event, ins) {
  var current = event.detail.current
  var all = ins.selectAllComponents('#card-swiper')
  for (var i = 0; i < all.length; ++i) {
    all[i].removeClass('cur')
  }
  ins.selectComponent('.show-swiper-' + current).addClass('cur')
  return false
}

// module.exports.updateAutoplay = updateAutoplay;
module.exports.Json = Json;
module.exports.color = color;
module.exports.toArray = toArray;
module.exports.cardSwiper = cardSwiper;
module.exports.authDisplay = authDisplay;
module.exports.longclickItem = longclickItem;
module.exports.switchAutoplay = switchAutoplay;
module.exports.switchSearchBar = switchSearchBar;
module.exports.longclickItemHandle = longclickItemHandle;